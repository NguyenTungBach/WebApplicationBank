//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplicationBank.ServiceReferenceBank {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceBank.Model")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeleteAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((this.AccountNumberField.Equals(value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateAt {
            get {
                return this.CreateAtField;
            }
            set {
                if ((this.CreateAtField.Equals(value) != true)) {
                    this.CreateAtField = value;
                    this.RaisePropertyChanged("CreateAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeleteAt {
            get {
                return this.DeleteAtField;
            }
            set {
                if ((this.DeleteAtField.Equals(value) != true)) {
                    this.DeleteAtField = value;
                    this.RaisePropertyChanged("DeleteAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateAt {
            get {
                return this.UpdateAtField;
            }
            set {
                if ((this.UpdateAtField.Equals(value) != true)) {
                    this.UpdateAtField = value;
                    this.RaisePropertyChanged("UpdateAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionHistory", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceBank.Model")]
    [System.SerializableAttribute()]
    public partial class TransactionHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReceiverAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SenderAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReceiverAccountNumber {
            get {
                return this.ReceiverAccountNumberField;
            }
            set {
                if ((this.ReceiverAccountNumberField.Equals(value) != true)) {
                    this.ReceiverAccountNumberField = value;
                    this.RaisePropertyChanged("ReceiverAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SenderAccountNumber {
            get {
                return this.SenderAccountNumberField;
            }
            set {
                if ((this.SenderAccountNumberField.Equals(value) != true)) {
                    this.SenderAccountNumberField = value;
                    this.RaisePropertyChanged("SenderAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceBank")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceBank.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateAccount", ReplyAction="http://tempuri.org/IService1/CreateAccountResponse")]
        WebApplicationBank.ServiceReferenceBank.Account CreateAccount(WebApplicationBank.ServiceReferenceBank.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateAccount", ReplyAction="http://tempuri.org/IService1/CreateAccountResponse")]
        System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.Account> CreateAccountAsync(WebApplicationBank.ServiceReferenceBank.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindAccount", ReplyAction="http://tempuri.org/IService1/FindAccountResponse")]
        WebApplicationBank.ServiceReferenceBank.Account FindAccount(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindAccount", ReplyAction="http://tempuri.org/IService1/FindAccountResponse")]
        System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.Account> FindAccountAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        WebApplicationBank.ServiceReferenceBank.Account Login(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.Account> LoginAsync(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Deposit", ReplyAction="http://tempuri.org/IService1/DepositResponse")]
        WebApplicationBank.ServiceReferenceBank.TransactionHistory Deposit(int AccountNumber, double Amount, string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Deposit", ReplyAction="http://tempuri.org/IService1/DepositResponse")]
        System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.TransactionHistory> DepositAsync(int AccountNumber, double Amount, string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Withdraw", ReplyAction="http://tempuri.org/IService1/WithdrawResponse")]
        WebApplicationBank.ServiceReferenceBank.TransactionHistory Withdraw(int AccountNumber, double Amount, string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Withdraw", ReplyAction="http://tempuri.org/IService1/WithdrawResponse")]
        System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.TransactionHistory> WithdrawAsync(int AccountNumber, double Amount, string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Transfer", ReplyAction="http://tempuri.org/IService1/TransferResponse")]
        WebApplicationBank.ServiceReferenceBank.TransactionHistory Transfer(int SenderAccountNumber, int ReceiverAccountNumber, double Amount, string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Transfer", ReplyAction="http://tempuri.org/IService1/TransferResponse")]
        System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.TransactionHistory> TransferAsync(int SenderAccountNumber, int ReceiverAccountNumber, double Amount, string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListAccount", ReplyAction="http://tempuri.org/IService1/ListAccountResponse")]
        WebApplicationBank.ServiceReferenceBank.Account[] ListAccount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListAccount", ReplyAction="http://tempuri.org/IService1/ListAccountResponse")]
        System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.Account[]> ListAccountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WebApplicationBank.ServiceReferenceBank.CompositeType GetDataUsingDataContract(WebApplicationBank.ServiceReferenceBank.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.CompositeType> GetDataUsingDataContractAsync(WebApplicationBank.ServiceReferenceBank.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebApplicationBank.ServiceReferenceBank.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebApplicationBank.ServiceReferenceBank.IService1>, WebApplicationBank.ServiceReferenceBank.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WebApplicationBank.ServiceReferenceBank.Account CreateAccount(WebApplicationBank.ServiceReferenceBank.Account account) {
            return base.Channel.CreateAccount(account);
        }
        
        public System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.Account> CreateAccountAsync(WebApplicationBank.ServiceReferenceBank.Account account) {
            return base.Channel.CreateAccountAsync(account);
        }
        
        public WebApplicationBank.ServiceReferenceBank.Account FindAccount(int id) {
            return base.Channel.FindAccount(id);
        }
        
        public System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.Account> FindAccountAsync(int id) {
            return base.Channel.FindAccountAsync(id);
        }
        
        public WebApplicationBank.ServiceReferenceBank.Account Login(string user, string password) {
            return base.Channel.Login(user, password);
        }
        
        public System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.Account> LoginAsync(string user, string password) {
            return base.Channel.LoginAsync(user, password);
        }
        
        public WebApplicationBank.ServiceReferenceBank.TransactionHistory Deposit(int AccountNumber, double Amount, string Token) {
            return base.Channel.Deposit(AccountNumber, Amount, Token);
        }
        
        public System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.TransactionHistory> DepositAsync(int AccountNumber, double Amount, string Token) {
            return base.Channel.DepositAsync(AccountNumber, Amount, Token);
        }
        
        public WebApplicationBank.ServiceReferenceBank.TransactionHistory Withdraw(int AccountNumber, double Amount, string Token) {
            return base.Channel.Withdraw(AccountNumber, Amount, Token);
        }
        
        public System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.TransactionHistory> WithdrawAsync(int AccountNumber, double Amount, string Token) {
            return base.Channel.WithdrawAsync(AccountNumber, Amount, Token);
        }
        
        public WebApplicationBank.ServiceReferenceBank.TransactionHistory Transfer(int SenderAccountNumber, int ReceiverAccountNumber, double Amount, string Token) {
            return base.Channel.Transfer(SenderAccountNumber, ReceiverAccountNumber, Amount, Token);
        }
        
        public System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.TransactionHistory> TransferAsync(int SenderAccountNumber, int ReceiverAccountNumber, double Amount, string Token) {
            return base.Channel.TransferAsync(SenderAccountNumber, ReceiverAccountNumber, Amount, Token);
        }
        
        public WebApplicationBank.ServiceReferenceBank.Account[] ListAccount() {
            return base.Channel.ListAccount();
        }
        
        public System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.Account[]> ListAccountAsync() {
            return base.Channel.ListAccountAsync();
        }
        
        public WebApplicationBank.ServiceReferenceBank.CompositeType GetDataUsingDataContract(WebApplicationBank.ServiceReferenceBank.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WebApplicationBank.ServiceReferenceBank.CompositeType> GetDataUsingDataContractAsync(WebApplicationBank.ServiceReferenceBank.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
